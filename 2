def func2(arg22, arg23):
    if arg22 < arg22:
        var28 = class3()
    else:
        var28 = class5()
    for var29 in (arg23 & arg22 ^ -9 for i in range(36)):
        var28.func4(arg23, arg23)
    var45 = var32(arg22, arg23)
    var46 = ((arg22 ^ var45) & arg22 ^ (261 - var45) + arg22 | -584) ^ (-1511165358 | ((arg23 & arg22 ^ 1305900132 | 599 | ((arg23 + arg22) + arg22)) & (((2083921369 | var45 ^ var45) + 502) | 365) - var45)) - 270
    result = -767 - var46
    return result
def func9(arg33, arg34):
    var39 = func10(arg33, arg34)
    var43 = func11(arg34, arg33)
    if arg34 < var43:
        var44 = arg34 + 1001805171
    else:
        var44 = var39 + 1732213598
    result = var39 | (-876 - (var43 + arg34) + var39 & var43 ^ -1314994648 | arg33) & (var39 ^ var39) + var43 + arg33
    return result
def func10(arg35, arg36):
    var37 = 0
    for var38 in xrange(39):
        var37 += arg36 ^ var37 - -10
    return var37
def func8():
    closure = [7]
    def func7(arg30, arg31):
        closure[0] += func9(arg30, arg31)
        return closure[0]
    func = func7
    return func
var32 = func8()
class class5(object):
    def func4(self, arg26, arg27):
        return 0
class class3(class5):
    def func4(self, arg24, arg25):
        result = ((arg24 & arg24 ^ arg25 + arg24) | 0 + -1) ^ arg24
        return result
def func1(arg1, arg2):
    var3 = -702371601 ^ 2137262928 - -63 & arg1
    var4 = var3 | -1513653669
    if var3 < arg2:
        var5 = var3 | var4
    else:
        var5 = var3 - (var3 ^ arg2)
    var6 = (1814136981 + var3) ^ var3 ^ arg1
    var7 = (arg1 ^ arg2 ^ var3) ^ var6
    var8 = var3 | var7
    var9 = var7 - -37 & var6 & var6
    var10 = ((-522 & var7) | -686) ^ var4
    var11 = ((var9 - var6) | arg2) - var7
    if var9 < var6:
        var12 = (var3 | -1904063698 - var8) ^ var4
    else:
        var12 = var7 ^ (-1922573827 & var8) ^ var11
    var13 = var11 - var7
    var14 = arg2 | 841907374 ^ var10 & -1736249465
    var15 = (var8 + var9 & var9) - var7
    var16 = ((var9 + var14) + arg2) | var9
    var17 = var14 - var4 & (var9 + var14)
    var18 = var9 | var14 + (var10 | var4)
    var19 = var9 - var6 | var16 - -527
    var20 = 1428988162 + 1187849323 - (-27 ^ arg2)
    var21 = var18 & ((-97127864 | 288) - var15)
    result = var19 + var14 | var13
    return result
def func11(arg40, arg41):
    closure = [0]
    def func12(acc, rest):
        var42 = -6 ^ 8
        closure[0] += var42
        if acc == 0:
            return var42
        else:
            result = func12(acc - 1, var42)
            return result
    result = func12(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 22'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 47'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
